{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"data\", \"title\", \"onPress\", \"isVisible\", \"dividerStyle\", \"titleTextStyle\", \"cancelButtonStyle\", \"titleTextContainer\", \"cancelButtonTextStyle\", \"cancelButtonUnderlayColor\", \"TouchableComponent\", \"onBackdropPress\", \"onCancelPress\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-modal\";\nimport styles from \"./PickerModal.style\";\nimport Divider from \"./components/divider/Divider\";\nimport ActionButton from \"./components/action-button/ActionButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar PickerModal = function PickerModal(_ref) {\n  var style = _ref.style,\n      data = _ref.data,\n      title = _ref.title,\n      onPress = _ref.onPress,\n      isVisible = _ref.isVisible,\n      dividerStyle = _ref.dividerStyle,\n      titleTextStyle = _ref.titleTextStyle,\n      cancelButtonStyle = _ref.cancelButtonStyle,\n      titleTextContainer = _ref.titleTextContainer,\n      cancelButtonTextStyle = _ref.cancelButtonTextStyle,\n      _ref$cancelButtonUnde = _ref.cancelButtonUnderlayColor,\n      cancelButtonUnderlayColor = _ref$cancelButtonUnde === void 0 ? \"rgba(200,200,200,0.1)\" : _ref$cancelButtonUnde,\n      _ref$TouchableCompone = _ref.TouchableComponent,\n      TouchableComponent = _ref$TouchableCompone === void 0 ? TouchableHighlight : _ref$TouchableCompone,\n      onBackdropPress = _ref.onBackdropPress,\n      onCancelPress = _ref.onCancelPress,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var Title = function Title() {\n    return _jsx(View, {\n      style: [styles.titleTextContainer, titleTextContainer],\n      children: _jsx(Text, {\n        style: [styles.titleTextStyle, titleTextStyle],\n        children: title\n      })\n    });\n  };\n\n  var CancelButton = function CancelButton() {\n    return _jsx(TouchableComponent, {\n      underlayColor: cancelButtonUnderlayColor,\n      style: [styles.cancelButtonStyle, cancelButtonStyle],\n      onPress: onCancelPress,\n      children: _jsx(Text, {\n        style: [styles.cancelButtonTextStyle, cancelButtonTextStyle],\n        children: \"Cancel\"\n      })\n    });\n  };\n\n  var Picker = function Picker() {\n    return _jsxs(View, {\n      style: [styles.mainContent, style],\n      children: [_jsx(Title, {}), _jsx(Divider, {\n        style: dividerStyle\n      }), data.map(function (item, index) {\n        return _jsx(ActionButton, _objectSpread(_objectSpread({\n          TouchableComponent: TouchableComponent,\n          isLastItem: index === data.length - 1\n        }, rest), {}, {\n          text: item,\n          onActionPress: function onActionPress() {\n            return onPress && onPress(item);\n          }\n        }), index);\n      })]\n    });\n  };\n\n  return _jsx(Modal, _objectSpread(_objectSpread({\n    isVisible: isVisible\n  }, rest), {}, {\n    animationIn: \"slideInUp\",\n    animationOut: \"slideOutDown\",\n    onBackdropPress: onBackdropPress,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Picker, {}), _jsx(CancelButton, {})]\n    })\n  }));\n};\n\nexport default PickerModal;","map":{"version":3,"names":["React","Modal","styles","Divider","ActionButton","PickerModal","style","data","title","onPress","isVisible","dividerStyle","titleTextStyle","cancelButtonStyle","titleTextContainer","cancelButtonTextStyle","cancelButtonUnderlayColor","TouchableComponent","TouchableHighlight","onBackdropPress","onCancelPress","rest","Title","CancelButton","Picker","mainContent","map","item","index","length","container"],"sources":["/Users/davidnguyen/Desktop/fixfit/components/PickerModal/PickerModal.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Text,\n  StyleProp,\n  ViewStyle,\n  TouchableHighlight,\n  TextStyle,\n} from \"react-native\";\nimport Modal from \"react-native-modal\";\n/**\n * ? Local Imports\n */\nimport styles from \"./PickerModal.style\";\nimport Divider from \"./components/divider/Divider\";\nimport ActionButton, {\n  IActionButtonProps,\n} from \"./components/action-button/ActionButton\";\n\ntype CustomStyleProp = StyleProp<ViewStyle> | Array<StyleProp<ViewStyle>>;\ntype CustomTextStyleProp = StyleProp<TextStyle> | Array<StyleProp<TextStyle>>;\n\nexport interface IPickerModalProps extends IActionButtonProps {\n  style?: CustomStyleProp;\n  dividerStyle?: CustomStyleProp;\n  cancelButtonStyle?: CustomStyleProp;\n  titleTextContainer?: CustomStyleProp;\n  titleTextStyle?: CustomTextStyleProp;\n  cancelButtonTextStyle?: CustomTextStyleProp;\n  data: string[];\n  title: string;\n  isVisible: boolean;\n  TouchableComponent?: any;\n  cancelButtonUnderlayColor?: string;\n  onPress: (selectedItem: string) => void;\n  onCancelPress: () => void;\n  onBackdropPress?: () => void;\n}\n\nconst PickerModal: React.FC<IPickerModalProps> = ({\n  style,\n  data,\n  title,\n  onPress,\n  isVisible,\n  dividerStyle,\n  titleTextStyle,\n  cancelButtonStyle,\n  titleTextContainer,\n  cancelButtonTextStyle,\n  cancelButtonUnderlayColor = \"rgba(200,200,200,0.1)\",\n  TouchableComponent = TouchableHighlight,\n  onBackdropPress,\n  onCancelPress,\n  ...rest\n}) => {\n  const Title = () => (\n    <View style={[styles.titleTextContainer, titleTextContainer]}>\n      <Text style={[styles.titleTextStyle, titleTextStyle]}>{title}</Text>\n    </View>\n  );\n\n  const CancelButton = () => (\n    <TouchableComponent\n      underlayColor={cancelButtonUnderlayColor}\n      style={[styles.cancelButtonStyle, cancelButtonStyle]}\n      onPress={onCancelPress}\n    >\n      <Text style={[styles.cancelButtonTextStyle, cancelButtonTextStyle]}>\n        Cancel\n      </Text>\n    </TouchableComponent>\n  );\n\n  const Picker = () => (\n    <View style={[styles.mainContent, style]}>\n      <Title />\n      <Divider style={dividerStyle} />\n      {data.map((item: string, index: number) => (\n        <ActionButton\n          key={index}\n          TouchableComponent={TouchableComponent}\n          isLastItem={index === data.length - 1}\n          {...rest}\n          text={item}\n          onActionPress={() => onPress && onPress(item)}\n        />\n      ))}\n    </View>\n  );\n\n  return (\n    <Modal\n      isVisible={isVisible}\n      {...rest}\n      animationIn=\"slideInUp\"\n      animationOut=\"slideOutDown\"\n      onBackdropPress={onBackdropPress}\n    >\n      <View style={styles.container}>\n        <Picker />\n        <CancelButton />\n      </View>\n    </Modal>\n  );\n};\n\nexport default PickerModal;"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AASA,OAAOC,KAAP,MAAkB,oBAAlB;AAIA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP;;;;AAwBA,IAAMC,WAAwC,GAAG,SAA3CA,WAA2C,OAgB3C;EAAA,IAfJC,KAeI,QAfJA,KAeI;EAAA,IAdJC,IAcI,QAdJA,IAcI;EAAA,IAbJC,KAaI,QAbJA,KAaI;EAAA,IAZJC,OAYI,QAZJA,OAYI;EAAA,IAXJC,SAWI,QAXJA,SAWI;EAAA,IAVJC,YAUI,QAVJA,YAUI;EAAA,IATJC,cASI,QATJA,cASI;EAAA,IARJC,iBAQI,QARJA,iBAQI;EAAA,IAPJC,kBAOI,QAPJA,kBAOI;EAAA,IANJC,qBAMI,QANJA,qBAMI;EAAA,iCALJC,yBAKI;EAAA,IALJA,yBAKI,sCALwB,uBAKxB;EAAA,iCAJJC,kBAII;EAAA,IAJJA,kBAII,sCAJiBC,kBAIjB;EAAA,IAHJC,eAGI,QAHJA,eAGI;EAAA,IAFJC,aAEI,QAFJA,aAEI;EAAA,IADDC,IACC;;EACJ,IAAMC,KAAK,GAAG,SAARA,KAAQ;IAAA,OACZ,KAAC,IAAD;MAAM,KAAK,EAAE,CAACpB,MAAM,CAACY,kBAAR,EAA4BA,kBAA5B,CAAb;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACZ,MAAM,CAACU,cAAR,EAAwBA,cAAxB,CAAb;QAAA,UAAuDJ;MAAvD;IADF,EADY;EAAA,CAAd;;EAMA,IAAMe,YAAY,GAAG,SAAfA,YAAe;IAAA,OACnB,KAAC,kBAAD;MACE,aAAa,EAAEP,yBADjB;MAEE,KAAK,EAAE,CAACd,MAAM,CAACW,iBAAR,EAA2BA,iBAA3B,CAFT;MAGE,OAAO,EAAEO,aAHX;MAAA,UAKE,KAAC,IAAD;QAAM,KAAK,EAAE,CAAClB,MAAM,CAACa,qBAAR,EAA+BA,qBAA/B,CAAb;QAAA;MAAA;IALF,EADmB;EAAA,CAArB;;EAYA,IAAMS,MAAM,GAAG,SAATA,MAAS;IAAA,OACb,MAAC,IAAD;MAAM,KAAK,EAAE,CAACtB,MAAM,CAACuB,WAAR,EAAqBnB,KAArB,CAAb;MAAA,WACE,KAAC,KAAD,KADF,EAEE,KAAC,OAAD;QAAS,KAAK,EAAEK;MAAhB,EAFF,EAGGJ,IAAI,CAACmB,GAAL,CAAS,UAACC,IAAD,EAAeC,KAAf;QAAA,OACR,KAAC,YAAD;UAEE,kBAAkB,EAAEX,kBAFtB;UAGE,UAAU,EAAEW,KAAK,KAAKrB,IAAI,CAACsB,MAAL,GAAc;QAHtC,GAIMR,IAJN;UAKE,IAAI,EAAEM,IALR;UAME,aAAa,EAAE;YAAA,OAAMlB,OAAO,IAAIA,OAAO,CAACkB,IAAD,CAAxB;UAAA;QANjB,IACOC,KADP,CADQ;MAAA,CAAT,CAHH;IAAA,EADa;EAAA,CAAf;;EAiBA,OACE,KAAC,KAAD;IACE,SAAS,EAAElB;EADb,GAEMW,IAFN;IAGE,WAAW,EAAC,WAHd;IAIE,YAAY,EAAC,cAJf;IAKE,eAAe,EAAEF,eALnB;IAAA,UAOE,MAAC,IAAD;MAAM,KAAK,EAAEjB,MAAM,CAAC4B,SAApB;MAAA,WACE,KAAC,MAAD,KADF,EAEE,KAAC,YAAD,KAFF;IAAA;EAPF,GADF;AAcD,CAlED;;AAoEA,eAAezB,WAAf"},"metadata":{},"sourceType":"module"}