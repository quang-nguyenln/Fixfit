{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport PickerModal from \"./components/PickerModal/PickerModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    ScreenWidth = _Dimensions$get.width;\n\nvar mockData = [\"Take a photo\", \"Select from album\"];\nvar mockTitle = \"You can either take a picture or select one from your album.\";\nvar dayMockData = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\nvar mockDayTitle = \"Select a day from the picker\";\n\nvar App = function App() {\n  var isDarkMode = useColorScheme() === \"dark\";\n\n  var _ref = useState < boolean > false,\n      _ref2 = _slicedToArray(_ref, 2),\n      isVisible = _ref2[0],\n      setVisible = _ref2[1];\n\n  var OpenPickerButton = function OpenPickerButton() {\n    return _jsx(Button, {\n      style: {\n        height: 50,\n        width: ScreenWidth * 0.9,\n        borderRadius: 16,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#059\"\n      },\n      onPress: function onPress() {\n        setVisible(true);\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"#fff\"\n        },\n        children: \"Image Picker Modal\"\n      })\n    });\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: 'black'\n    },\n    children: _jsx(Button, {\n      style: {\n        height: 50,\n        width: ScreenWidth * 0.9,\n        borderRadius: 16,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#059\"\n      },\n      onPress: function onPress() {\n        setVisible(true);\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"#fff\"\n        },\n        children: \"Image Picker Modal\"\n      })\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"names":["React","PickerModal","Dimensions","get","ScreenWidth","width","mockData","mockTitle","dayMockData","mockDayTitle","App","isDarkMode","useColorScheme","useState","boolean","isVisible","setVisible","OpenPickerButton","height","borderRadius","alignItems","justifyContent","backgroundColor","color","flex"],"sources":["/Users/davidnguyen/Desktop/fixfit/App.js"],"sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  Alert,\n  StatusBar,\n  Dimensions,\n  SafeAreaView,\n  useColorScheme,\n  Button\n} from \"react-native\";\n\nimport PickerModal from './components/PickerModal/PickerModal';\n\n\nconst { width: ScreenWidth } = Dimensions.get(\"screen\");\n\nconst mockData = [\"Take a photo\", \"Select from album\"];\nconst mockTitle =\n  \"You can either take a picture or select one from your album.\";\n\nconst dayMockData = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\nconst mockDayTitle = \"Select a day from the picker\";\n\nconst App = () => {\n  const isDarkMode = useColorScheme() === \"dark\";\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const OpenPickerButton = () => (\n    <Button\n      style={{\n        height: 50,\n        width: ScreenWidth * 0.9,\n        borderRadius: 16,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#059\",\n      }}\n      onPress={() => {\n        setVisible(true);\n      }}\n    >\n      <Text style={{ color: \"#fff\" }}>Image Picker Modal</Text>\n    </Button>\n  );\n\n\n  return (\n    <View\n      style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\", backgroundColor: 'black'}}\n    >\n      {/* <OpenPickerButton />\n      <PickerModal\n        title={mockTitle}\n        isVisible={isVisible}\n        data={mockData}\n        onPress={(selectedItem) => {\n          Alert.alert(\"Alert\", selectedItem);\n        }}\n        onCancelPress={() => {\n          setVisible(false);\n        }}\n        onBackdropPress={() => {\n          setVisible(false);\n        }}\n      />\n     */}\n      <Button\n      style={{\n        height: 50,\n        width: ScreenWidth * 0.9,\n        borderRadius: 16,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#059\",\n      }}\n      onPress={() => {\n        setVisible(true);\n      }}\n    >\n      <Text style={{ color: \"#fff\" }}>Image Picker Modal</Text>\n    </Button>\n    </View>\n  );\n};\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAWA,OAAOC,WAAP;;;AAGA,sBAA+BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA/B;AAAA,IAAeC,WAAf,mBAAQC,KAAR;;AAEA,IAAMC,QAAQ,GAAG,CAAC,cAAD,EAAiB,mBAAjB,CAAjB;AACA,IAAMC,SAAS,GACb,8DADF;AAGA,IAAMC,WAAW,GAAG,CAClB,QADkB,EAElB,SAFkB,EAGlB,WAHkB,EAIlB,UAJkB,EAKlB,QALkB,EAMlB,UANkB,EAOlB,QAPkB,CAApB;AASA,IAAMC,YAAY,GAAG,8BAArB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,IAAMC,UAAU,GAAGC,cAAc,OAAO,MAAxC;;EACA,WAAgCC,QAAQ,GAACC,OAAT,GAAkB,KAAlD;EAAA;EAAA,IAAOC,SAAP;EAAA,IAAkBC,UAAlB;;EAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;IAAA,OACvB,KAAC,MAAD;MACE,KAAK,EAAE;QACLC,MAAM,EAAE,EADH;QAELb,KAAK,EAAED,WAAW,GAAG,GAFhB;QAGLe,YAAY,EAAE,EAHT;QAILC,UAAU,EAAE,QAJP;QAKLC,cAAc,EAAE,QALX;QAMLC,eAAe,EAAE;MANZ,CADT;MASE,OAAO,EAAE,mBAAM;QACbN,UAAU,CAAC,IAAD,CAAV;MACD,CAXH;MAAA,UAaE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEO,KAAK,EAAE;QAAT,CAAb;QAAA;MAAA;IAbF,EADuB;EAAA,CAAzB;;EAmBA,OACE,KAAC,IAAD;IACE,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAR;MAAWJ,UAAU,EAAE,QAAvB;MAAiCC,cAAc,EAAE,QAAjD;MAA2DC,eAAe,EAAE;IAA5E,CADT;IAAA,UAmBE,KAAC,MAAD;MACA,KAAK,EAAE;QACLJ,MAAM,EAAE,EADH;QAELb,KAAK,EAAED,WAAW,GAAG,GAFhB;QAGLe,YAAY,EAAE,EAHT;QAILC,UAAU,EAAE,QAJP;QAKLC,cAAc,EAAE,QALX;QAMLC,eAAe,EAAE;MANZ,CADP;MASA,OAAO,EAAE,mBAAM;QACbN,UAAU,CAAC,IAAD,CAAV;MACD,CAXD;MAAA,UAaA,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEO,KAAK,EAAE;QAAT,CAAb;QAAA;MAAA;IAbA;EAnBF,EADF;AAqCD,CA5DD;;AA8DA,eAAeb,GAAf"},"metadata":{},"sourceType":"module"}