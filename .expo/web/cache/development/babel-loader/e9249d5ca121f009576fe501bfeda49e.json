{"ast":null,"code":"import * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles, { _dynamicBorderStyle } from \"./ActionButton.style\";\nimport Divider from \"../divider/Divider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ActionButton = function ActionButton(_ref) {\n  var text = _ref.text,\n      _ref$isLastItem = _ref.isLastItem,\n      isLastItem = _ref$isLastItem === void 0 ? false : _ref$isLastItem,\n      dividerStyle = _ref.dividerStyle,\n      actionButtonStyle = _ref.actionButtonStyle,\n      actionButtonTextStyle = _ref.actionButtonTextStyle,\n      TouchableComponent = _ref.TouchableComponent,\n      _ref$actionButtonUnde = _ref.actionButtonUnderlayColor,\n      actionButtonUnderlayColor = _ref$actionButtonUnde === void 0 ? \"rgba(0,0,0,0.3)\" : _ref$actionButtonUnde,\n      onActionPress = _ref.onActionPress;\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableComponent, {\n      underlayColor: actionButtonUnderlayColor,\n      style: [styles.actionButtonStyle, actionButtonStyle, _dynamicBorderStyle(isLastItem)],\n      onPress: onActionPress,\n      children: _jsx(Text, {\n        style: [styles.actionButtonTextStyle, actionButtonTextStyle],\n        children: text\n      })\n    }), !isLastItem && _jsx(Divider, {\n      style: dividerStyle\n    })]\n  });\n};\n\nexport default ActionButton;","map":{"version":3,"names":["React","styles","_dynamicBorderStyle","Divider","ActionButton","text","isLastItem","dividerStyle","actionButtonStyle","actionButtonTextStyle","TouchableComponent","actionButtonUnderlayColor","onActionPress"],"sources":["/Users/davidnguyen/Desktop/fixfit/components/PickerModal/components/action-button/ActionButton.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { StyleProp, Text, ViewStyle, TextStyle } from \"react-native\";\n/**\n * ? Local Imports\n */\nimport styles, { _dynamicBorderStyle } from \"./ActionButton.style\";\nimport Divider from \"../divider/Divider\";\n\ntype CustomViewStyleProp = StyleProp<ViewStyle> | Array<StyleProp<ViewStyle>>;\ntype CustomTextStyleProp = StyleProp<TextStyle> | Array<StyleProp<TextStyle>>;\n\nexport interface IActionButtonProps {\n  actionButtonUnderlayColor?: string;\n  actionButtonStyle?: CustomViewStyleProp;\n  dividerStyle?: CustomViewStyleProp;\n  actionButtonTextStyle?: CustomTextStyleProp;\n  text?: string;\n  TouchableComponent?: any;\n  isLastItem?: boolean;\n  onActionPress?: () => void;\n}\n\nconst ActionButton: React.FC<IActionButtonProps> = ({\n  text,\n  isLastItem = false,\n  dividerStyle,\n  actionButtonStyle,\n  actionButtonTextStyle,\n  TouchableComponent,\n  actionButtonUnderlayColor = \"rgba(0,0,0,0.3)\",\n  onActionPress,\n}) => {\n  return (\n    <>\n      <TouchableComponent\n        underlayColor={actionButtonUnderlayColor}\n        style={[\n          styles.actionButtonStyle,\n          actionButtonStyle,\n          _dynamicBorderStyle(isLastItem),\n        ]}\n        onPress={onActionPress}\n      >\n        <Text style={[styles.actionButtonTextStyle, actionButtonTextStyle]}>\n          {text}\n        </Text>\n      </TouchableComponent>\n      {!isLastItem && <Divider style={dividerStyle} />}\n    </>\n  );\n};\n\nexport default ActionButton;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAKA,OAAOC,MAAP,IAAiBC,mBAAjB;AACA,OAAOC,OAAP;;;;;AAgBA,IAAMC,YAA0C,GAAG,SAA7CA,YAA6C,OAS7C;EAAA,IARJC,IAQI,QARJA,IAQI;EAAA,2BAPJC,UAOI;EAAA,IAPJA,UAOI,gCAPS,KAOT;EAAA,IANJC,YAMI,QANJA,YAMI;EAAA,IALJC,iBAKI,QALJA,iBAKI;EAAA,IAJJC,qBAII,QAJJA,qBAII;EAAA,IAHJC,kBAGI,QAHJA,kBAGI;EAAA,iCAFJC,yBAEI;EAAA,IAFJA,yBAEI,sCAFwB,iBAExB;EAAA,IADJC,aACI,QADJA,aACI;EACJ,OACE;IAAA,WACE,KAAC,kBAAD;MACE,aAAa,EAAED,yBADjB;MAEE,KAAK,EAAE,CACLV,MAAM,CAACO,iBADF,EAELA,iBAFK,EAGLN,mBAAmB,CAACI,UAAD,CAHd,CAFT;MAOE,OAAO,EAAEM,aAPX;MAAA,UASE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACX,MAAM,CAACQ,qBAAR,EAA+BA,qBAA/B,CAAb;QAAA,UACGJ;MADH;IATF,EADF,EAcG,CAACC,UAAD,IAAe,KAAC,OAAD;MAAS,KAAK,EAAEC;IAAhB,EAdlB;EAAA,EADF;AAkBD,CA5BD;;AA8BA,eAAeH,YAAf"},"metadata":{},"sourceType":"module"}